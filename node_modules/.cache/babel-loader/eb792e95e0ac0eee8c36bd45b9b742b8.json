{"ast":null,"code":"var _jsxFileName = \"/Users/miriamnaki/Desktop/BRAINSTATION-CONTENT/projects/miriam-nakiyingi-brainflix/src/components/pages/HomePage/HomePage.js\";\nimport { Component, React } from 'react';\nimport VideoSelected from '../../VideoSelected/VideoSelected';\nimport VideoDetails from '../../VideoDetails/VideoDetails';\nimport VideoList from '../../VideoList/VideoList';\nimport VideoComments from '../../VideoComments/VideoComments';\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const API_KEY = '9c603683-73d2-4f20-accc-e82961045b5a';\nexport const API_URL = 'https://project-2-api.herokuapp.com/videos';\nconst allVideos = axios.get(`${API_URL}?api_key=${API_KEY}`);\n\nclass HomePage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      videoList: [],\n      selectedVideo: null,\n      videoDetails: []\n    };\n\n    this.fetchDetails = videoId => {\n      axios.get(`${API_URL}/${videoId}?api_key=${API_KEY}`).then(res => {\n        const result = res.data;\n        this.setState({\n          selectedVideo: result\n        });\n      }).catch(err => {\n        return err;\n      });\n    };\n  }\n\n  // initial video fetch\n  componentDidMount() {\n    // current video\n    let currentVideo = this.props.match.params.videoId;\n    allVideos.then(response => {\n      // video list\n      let fetchedList = response.data;\n      this.setState({\n        videoList: fetchedList\n      }); // video currently playing\n\n      const mainVideo = currentVideo ? currentVideo : response.data[0].id;\n      this.fetchDetails(mainVideo);\n    }).catch(err => {\n      return err;\n    });\n  } // updating the state when new video is selected\n\n\n  componentDidUpdate(prevProps) {\n    let currentVideo = this.props.match.params.videoId;\n    const homeUrl = this.props.match.params.url;\n\n    if (prevProps.match.params.videoId !== currentVideo && currentVideo) {\n      this.fetchDetails(currentVideo);\n    }\n\n    if (!this.state.selectedVideo || currentVideo === homeUrl && this.state.selectedVideo.id !== this.state.videoList[0].id) {\n      this.fetchDetails(this.state.videoList[0].id);\n    }\n  } // function to fetch the details of a currently selected video\n\n\n  render() {\n    if (!this.state.selectedVideo) {\n      // Using the loader library of display spinner when data is being fetched\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"ThreeDots\",\n        color: \"blue\",\n        height: 50,\n        width: 50,\n        timeout: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this);\n    } // Removing selected video from list\n\n\n    const list = this.state.videoList;\n    const filteredVideos = list.filter(video => video.id !== this.state.selectedVideo.id);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(VideoSelected, {\n        selectedVideo: this.state.selectedVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__video-details\",\n          children: [/*#__PURE__*/_jsxDEV(VideoDetails, {\n            selectedVideo: this.state.selectedVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app__video-comments\",\n            children: /*#__PURE__*/_jsxDEV(VideoComments, {\n              selectedVideo: this.state.selectedVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"app__vertical-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__video-list\",\n          children: /*#__PURE__*/_jsxDEV(VideoList, {\n            videoList: filteredVideos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/miriamnaki/Desktop/BRAINSTATION-CONTENT/projects/miriam-nakiyingi-brainflix/src/components/pages/HomePage/HomePage.js"],"names":["Component","React","VideoSelected","VideoDetails","VideoList","VideoComments","axios","Loader","API_KEY","API_URL","allVideos","get","HomePage","state","videoList","selectedVideo","videoDetails","fetchDetails","videoId","then","res","result","data","setState","catch","err","componentDidMount","currentVideo","props","match","params","response","fetchedList","mainVideo","id","componentDidUpdate","prevProps","homeUrl","url","render","list","filteredVideos","filter","video"],"mappings":"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","sourcesContent":["import { Component, React } from 'react';\nimport VideoSelected from '../../VideoSelected/VideoSelected';\nimport VideoDetails from '../../VideoDetails/VideoDetails';\nimport VideoList from '../../VideoList/VideoList';\nimport VideoComments from '../../VideoComments/VideoComments';\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nexport const API_KEY = '9c603683-73d2-4f20-accc-e82961045b5a';\nexport const API_URL = 'https://project-2-api.herokuapp.com/videos';\n\nconst allVideos = axios.get(`${API_URL}?api_key=${API_KEY}`)\n\nclass HomePage extends Component{\n \n  state = {\n    videoList: [], \n    selectedVideo: null,  \n    videoDetails: [] \n }\n\n \n// initial video fetch\ncomponentDidMount(){\n  // current video\n  let currentVideo = this.props.match.params.videoId\n  allVideos\n  .then((response) => {\n    // video list\n    let fetchedList = response.data\n\n    this.setState({\n      videoList: fetchedList,\n    })\n\n    // video currently playing\n    const mainVideo =  currentVideo ?  currentVideo : response.data[0].id\n    this.fetchDetails(mainVideo)\n     \n  })\n  .catch(err => {\n    return err\n  })\n}\n\n// updating the state when new video is selected\ncomponentDidUpdate(prevProps){\n  let currentVideo = this.props.match.params.videoId\n  const homeUrl = this.props.match.params.url\n\n  if(prevProps.match.params.videoId !== currentVideo && currentVideo) {\n    this.fetchDetails(currentVideo)\n  }\n\n  if(!this.state.selectedVideo || (currentVideo === homeUrl && this.state.selectedVideo.id !== this.state.videoList[0].id)) {\n      this.fetchDetails(this.state.videoList[0].id)\n  }\n  \n \n}\n\n// function to fetch the details of a currently selected video\nfetchDetails = (videoId) => {\n  \n  axios.get(`${ API_URL}/${videoId}?api_key=${API_KEY}`)\n    .then(res => {\n      const result = res.data    \n      this.setState({\n      selectedVideo: result\n    })\n  }) \n  .catch(err => {\n    return err\n  })    \n}\n\n\n  render(){ \n    \n    if (!this.state.selectedVideo) {\n      // Using the loader library of display spinner when data is being fetched\n      return <Loader\n      type=\"ThreeDots\"\n      color= \"blue\"\n      height={50}\n      width={50}\n      timeout={3000} \n      />\n    }\n    // Removing selected video from list\n    const list = this.state.videoList;\n    const filteredVideos = list.filter(video => video.id !== this.state.selectedVideo.id);\n\n    return (\n      <>\n         <VideoSelected selectedVideo = {this.state.selectedVideo}/>\n      <div className=\"app\">\n        <div className=\"app__video-details\">\n          <VideoDetails \n            selectedVideo = {this.state.selectedVideo}\n           \n          />\n        <div className=\"app__video-comments\">\n          <VideoComments \n           selectedVideo = {this.state.selectedVideo}\n          \n           />\n        </div>\n        </div>\n\n        <hr className=\"app__vertical-divider\"></hr>\n\n        <div className=\"app__video-list\">         \n            <VideoList videoList={filteredVideos}/>\n        </div>\n      </div>\n      </>\n    )\n\n  }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}